<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.4.1">Jekyll</generator><link href="https://wongzit.github.io/feed.xml" rel="self" type="application/atom+xml"/><link href="https://wongzit.github.io/" rel="alternate" type="text/html" hreflang="en"/><updated>2025-09-22T16:32:36+00:00</updated><id>https://wongzit.github.io/feed.xml</id><title type="html">blank</title><subtitle>Personal homepage of ZW. </subtitle><entry><title type="html">Orbital Composition Analysis</title><link href="https://wongzit.github.io/orbital-composition-analysis/" rel="alternate" type="text/html" title="Orbital Composition Analysis"/><published>2025-06-03T01:25:25+00:00</published><updated>2025-06-03T01:25:25+00:00</updated><id>https://wongzit.github.io/orbital-composition-analysis</id><content type="html" xml:base="https://wongzit.github.io/orbital-composition-analysis/"><![CDATA[<script type="text/javascript" async="" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML"> </script> <script type="text/x-mathjax-config">
 MathJax.Hub.Config({
 tex2jax: {
 inlineMath: [['$', '$'] ],
 displayMath: [ ['$$','$$'], ["\\[","\\]"] ]
 }
 });
</script> <p>This blog shows how to perform orbial composition analysis based on Gaussian output files.</p> <h2 id="1-general-information">1. General Information</h2> <p>Orbital composition analysis is to evaluate the contributions of various components that make up an orbital.The orbitals could be any type of orbitals (MO, LMO, NO, etc). These components can be analyzed at different levels, from smallest to largest: (1) <strong>basis functions</strong>, (2) <strong>atomic orbitals</strong>, (3) <strong>atoms</strong>, (4) <strong>molecular fragments</strong>.</p> <h2 id="2-calculate-contributions-of-basis-functions">2. Calculate Contributions of Basis Functions</h2> <p>Here we will use a water molecule as example to explain. Input file is like this:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>#p b3lyp/6-31(d) pop=full iop(3/33=1)

Basis functions composition

0 1
O                     0.        0.        0.11972 
H                     0.        0.76155  -0.47887 
H                     0.       -0.76155  -0.47887 
</code></pre></div></div> <p>Using the keyword <code class="language-plaintext highlighter-rouge">pop=full</code> prints out the orbital coefficient and <code class="language-plaintext highlighter-rouge">iop(3/33=1)</code> outputs the overlap matrix (see below).</p> <p>The orbital part in the output file appears as follows:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>     Molecular Orbital Coefficients:
                           1         2         3         4         5
                        (A1)--O   (A1)--O   (B2)--O   (A1)--O   (B1)--O
     Eigenvalues --   -19.13815  -0.99790  -0.51718  -0.37220  -0.29119
   1 1   O  1S          0.99286  -0.20950   0.00000  -0.08809   0.00000
   2        2S          0.02622   0.46921   0.00000   0.17724   0.00000
   3        2PX         0.00000   0.00000   0.00000   0.00000   0.64458
   4        2PY         0.00000   0.00000   0.51744   0.00000   0.00000
   5        2PZ        -0.00110  -0.12769   0.00000   0.55184   0.00000
   6        3S          0.01011   0.43950   0.00000   0.41041   0.00000
   7        3PX         0.00000   0.00000   0.00000   0.00000   0.50605
   8        3PY         0.00000   0.00000   0.26974   0.00000   0.00000
   9        3PZ        -0.00000  -0.06064   0.00000   0.37218   0.00000
  10        4XX        -0.00772  -0.01093   0.00000  -0.00026   0.00000
  11        4YY        -0.00777   0.01879   0.00000   0.00089   0.00000
  12        4ZZ        -0.00775   0.01607   0.00000  -0.05242   0.00000
  13        4XY         0.00000   0.00000   0.00000   0.00000   0.00000
  14        4XZ         0.00000   0.00000   0.00000   0.00000  -0.03544
  15        4YZ         0.00000   0.00000  -0.04127   0.00000   0.00000
  16 2   H  1S          0.00037   0.13915   0.23745  -0.14372   0.00000
  17        2S         -0.00103   0.00645   0.14193  -0.11426   0.00000
  18 3   H  1S          0.00037   0.13915  -0.23745  -0.14372   0.00000
  19        2S         -0.00103   0.00645  -0.14193  -0.11426   0.00000
</code></pre></div></div> <p>From the output, the HOMO (No.5) wavefunction can be writen as:</p> \[\Psi _5 = 0.64458 \times \chi_3 + 0.50605 \times \chi _7 -0.03544 \times \chi _{14}\] <p>Since the orbital must be normalized:</p> \[\langle \Psi _5 | \Psi _5 \rangle = 1 = 0.64458^2 \times \langle \chi_3|\chi_3 \rangle + 0.50605^2 \times \langle \chi_7|\chi_7 \rangle + 0.03544^2 \times \langle \chi_{14}|\chi_{14} \rangle + 2 \times 0.64458 \times 0.50605 \langle \chi_3|\chi_7 \rangle - 2 \times 0.64458 \times 0.03544 \langle \chi_3|\chi_{14} \rangle - 2 \times 0.50605 \times 0.03544 \langle \chi_7|\chi_{14} \rangle\] <p>Thus,</p> \[1 = 0.41548 \times S_{3,3} + 0.25609 \times S_{7,7} + 0.00126 \times S_{14,14} + 0.65238 \times S_{3,7} - 0.04569 \times S_{3,14} - 0.03587 \times S_{7,14}\] <p>In the above equetion, <em>0.41548</em> represents the contribution of basis χ<sub>3</sub> to HOMO, while <em>0.65238</em> reflects the combined contribution of basis χ<sub>3</sub> and χ<sub>7</sub> to HOMO. Since, <i>S</i><sub>a,a</sub> = 1,</p> <p>Thus,</p> \[\langle \Psi _5 | \Psi _5 \rangle = 0.67283 + 0.65238 \times S_{3,7} - 0.04569 \times S_{3,14} - 0.03587 \times S_{7,14}\] <p>To calculate the contribution of each basis function, we need overlap integral <i>S</i><sub>3,7</sub>, <i>S</i><sub>3,14</sub>, and <i>S</i><sub>7,14</sub>. These overlap integral can be obtained using <code class="language-plaintext highlighter-rouge">iop(3/33=1)</code> keyword and aresummarized in the <strong>Overlap</strong> section:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> *** Overlap *** 
                1             2             3             4             5 
      1  0.100000D+01
      2  0.233690D+00  0.100000D+01
      3  0.000000D+00  0.000000D+00  0.100000D+01
      4  0.000000D+00  0.000000D+00  0.000000D+00  0.100000D+01
      5  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00  0.100000D+01
      6  0.167280D+00  0.763641D+00  0.000000D+00  0.000000D+00  0.000000D+00
      7  0.000000D+00  0.000000D+00  0.501521D+00  0.000000D+00  0.000000D+00
      8  0.000000D+00  0.000000D+00  0.000000D+00  0.501521D+00  0.000000D+00
      9  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00  0.501521D+00
     10  0.335315D-01  0.547066D+00  0.000000D+00  0.000000D+00  0.000000D+00
     11  0.335315D-01  0.547066D+00  0.000000D+00  0.000000D+00  0.000000D+00
     12  0.335315D-01  0.547066D+00  0.000000D+00  0.000000D+00  0.000000D+00
     13  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00
     14  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00
     15  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00
     16  0.334348D-01  0.241296D+00  0.000000D+00  0.221010D+00 -0.173718D+00
     17  0.681738D-01  0.376405D+00  0.000000D+00  0.116274D+00 -0.913932D-01
     18  0.334348D-01  0.241296D+00  0.000000D+00 -0.221010D+00 -0.173718D+00
     19  0.681738D-01  0.376405D+00  0.000000D+00 -0.116274D+00 -0.913932D-01
                6             7             8             9            10 
      6  0.100000D+01
      7  0.000000D+00  0.100000D+01
      8  0.000000D+00  0.000000D+00  0.100000D+01
      9  0.000000D+00  0.000000D+00  0.000000D+00  0.100000D+01
     10  0.699015D+00  0.000000D+00  0.000000D+00  0.000000D+00  0.100000D+01
     11  0.699015D+00  0.000000D+00  0.000000D+00  0.000000D+00  0.333333D+00
     12  0.699015D+00  0.000000D+00  0.000000D+00  0.000000D+00  0.333333D+00
     13  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00
     14  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00
     15  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00
     16  0.421231D+00  0.000000D+00  0.457410D+00 -0.359532D+00  0.162722D+00
     17  0.678714D+00  0.000000D+00  0.379588D+00 -0.298363D+00  0.395977D+00
     18  0.421231D+00  0.000000D+00 -0.457410D+00 -0.359532D+00  0.162722D+00
     19  0.678714D+00  0.000000D+00 -0.379588D+00 -0.298363D+00  0.395977D+00
               11            12            13            14            15 
     11  0.100000D+01
     12  0.333333D+00  0.100000D+01
     13  0.000000D+00  0.000000D+00  0.100000D+01
     14  0.000000D+00  0.000000D+00  0.000000D+00  0.100000D+01
     15  0.000000D+00  0.000000D+00  0.000000D+00  0.000000D+00  0.100000D+01
     16  0.401135D+00  0.310019D+00  0.000000D+00  0.000000D+00 -0.324581D+00
     17  0.440358D+00  0.423396D+00  0.000000D+00  0.000000D+00 -0.604210D-01
     18  0.401135D+00  0.310019D+00  0.000000D+00  0.000000D+00  0.324581D+00
     19  0.440358D+00  0.423396D+00  0.000000D+00  0.000000D+00  0.604210D-01
               16            17            18            19 
     16  0.100000D+01
     17  0.658292D+00  0.100000D+01
     18  0.502482D-01  0.221846D+00  0.100000D+01
     19  0.221846D+00  0.512715D+00  0.658292D+00  0.100000D+01
</code></pre></div></div> <p>For this example, the <i>S</i><sub>3,7</sub> = 0.50152, and <i>S</i><sub>3,14</sub> = <i>S</i><sub>7,14</sub> = 0. Thus,</p> \[\langle \Psi _5 | \Psi _5 \rangle = 0.67283 + 0.65238 \times 0.50152 = 1.00002\] <p>To calculate the contribution of each basis function χ<sub>n</sub>, here are three methods:</p> <h4 id="1-mulliken-partition">(1) Mulliken Partition</h4> <p>In the Mulliken partition, when calculating the contribution of basis function χ<sub>n</sub> to an orbital, all the diagonal (localized, <em>i.e.</em>, <i>S</i><sub>n,n</sub>) terms of χ<sub>n</sub> are assigned entirely to χ<sub>n</sub>, while half of the off-diagonal (overlap, <em>i.e.</em>, <i>S</i><sub>n,m</sub>) terms between χ<sub>n</sub> and χ<sub>m</sub> are also attributed to χ<sub>n</sub>.</p> <p>In the above example, the contribution of χ<sub>3</sub> to HOMO is:</p> \[0.64458^2 + 0.64458 \times 0.50605 \times 0.50152 = 0.57907\] <p>Similar, the contribution of χ<sub>7</sub> and χ<sub>14</sub> to HOMO are 41.968% and 0.126%, respectively.</p> <h3 id="2-stout-politzer-partition">(2) Stout-Politzer Partition</h3> <p>The Stout–Politzer partition accounts for the inequality between basis functions by partitioning the overlap terms in proportion to the squared coefficients of the two involved basis functions. For above example, the contribution of χ<sub>3</sub> to HOMO is:</p> \[0.64458^2 + 2 \times 0.64458 \times 0.50605 \times 0.50152 \times \frac {0.64458^2}{0.64458^2+0.50605^2} = 0.61790\] <p>Similar, the contribution of χ<sub>7</sub> and χ<sub>14</sub> to HOMO are 38.085% and 0.126%, respectively.</p> <h3 id="3-ros-schuit-scpa-partition">(3) Ros-Schuit (SCPA) partition</h3> <p><em>skip for now, maybe added later</em></p> <h2 id="3-calculate-contributions-of-atomic-orbitals">3. Calculate Contributions of Atomic Orbitals</h2> <p>Here are several methods to do this, and in this blog, I will introducing the NAO approach.</p> <p>In Gaussian, using keyword <code class="language-plaintext highlighter-rouge">pop=nboread</code> and add <code class="language-plaintext highlighter-rouge">$NBO NAOMO $END</code> at the end of input file, the NBO module will print the NAO population results and orbital coefficient of NAO:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>NATURAL POPULATIONS:  Natural atomic orbital occupancies 
                                                          
   NAO  Atom  No  lang   Type(AO)    Occupancy      Energy
 ----------------------------------------------------------
     1    O    1  S      Cor( 1S)     1.99992     -18.98955
     2    O    1  S      Val( 2S)     1.76556      -0.88052
     3    O    1  S      Ryd( 3S)     0.00271       1.19296
     4    O    1  S      Ryd( 4S)     0.00000       3.53766
     5    O    1  px     Val( 2p)     1.99661      -0.28809
     6    O    1  px     Ryd( 3p)     0.00088       0.89052
     7    O    1  py     Val( 2p)     1.45457      -0.25518
     8    O    1  py     Ryd( 3p)     0.00287       1.02985
     9    O    1  pz     Val( 2p)     1.69984      -0.28442
    10    O    1  pz     Ryd( 3p)     0.00043       0.93030
    11    O    1  dxy    Ryd( 3d)     0.00000       1.74635
    12    O    1  dxz    Ryd( 3d)     0.00251       1.77697
    13    O    1  dyz    Ryd( 3d)     0.00205       2.53155
    14    O    1  dx2y2  Ryd( 3d)     0.00069       2.13328
    15    O    1  dz2    Ryd( 3d)     0.00267       1.73849

    16    H    2  S      Val( 1S)     0.53264       0.14162
    17    H    2  S      Ryd( 2S)     0.00169       0.57225

    18    H    3  S      Val( 1S)     0.53264       0.14162
    19    H    3  S      Ryd( 2S)     0.00169       0.57225
</code></pre></div></div> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>MOs in the NAO basis:                                                         

          NAO        1       2       3       4       5       6       7       8
      ---------- ------- ------- ------- ------- ------- ------- ------- -------
   1.  O 1 (S)    0.9959 -0.0875 -0.0000 -0.0218  0.0000  0.0042 -0.0000 -0.0000
   2.  O 1 (S)    0.0840  0.8718 -0.0000  0.3402  0.0000  0.2404  0.0000  0.0000
   3.  O 1 (S)    0.0004  0.0134  0.0000 -0.0343 -0.0000 -0.1941 -0.0000  0.0000
   4.  O 1 (S)   -0.0000 -0.0000  0.0000  0.0000 -0.0000  0.0367 -0.0000  0.0000
   5.  O 1 (px)   0.0000  0.0000  0.0000 -0.0000  0.9992  0.0000 -0.0000 -0.0000
   6.  O 1 (px)  -0.0000 -0.0000 -0.0000  0.0000 -0.0210 -0.0000  0.0000  0.0000
   7.  O 1 (py)   0.0000  0.0000  0.8528 -0.0000  0.0000 -0.0000 -0.3862 -0.3369
   8.  O 1 (py)   0.0000 -0.0000  0.0379 -0.0000 -0.0000 -0.0000 -0.0097  0.3747
   9.  O 1 (pz)   0.0023 -0.2020 -0.0000  0.8995 -0.0000 -0.3068  0.0000 -0.0000
  10.  O 1 (pz)  -0.0010 -0.0051  0.0000 -0.0138  0.0000  0.0118  0.0000  0.0000
  11.  O 1 (d1)   0.0000  0.0000 -0.0000 -0.0000 -0.0000 -0.0000  0.0000 -0.0000
  12.  O 1 (d2)  -0.0000  0.0000  0.0000 -0.0000 -0.0354  0.0000 -0.0000  0.0000
  13.  O 1 (d3)  -0.0000 -0.0000 -0.0320  0.0000 -0.0000 -0.0000  0.0143 -0.1522
  14.  O 1 (d4)   0.0001 -0.0185 -0.0000  0.0023 -0.0000  0.0167  0.0000 -0.0000
  15.  O 1 (d5)  -0.0000  0.0083  0.0000 -0.0356  0.0000  0.0129 -0.0000  0.0000
  16.  H 2 (S)    0.0234  0.3082  0.3674 -0.1893 -0.0000 -0.4673  0.4331  0.3805
  17.  H 2 (S)    0.0020 -0.0228  0.0122 -0.0131 -0.0000 -0.4312  0.4875 -0.4655
  18.  H 3 (S)    0.0234  0.3082 -0.3674 -0.1893 -0.0000 -0.4673 -0.4331 -0.3805
  19.  H 3 (S)    0.0020 -0.0228 -0.0122 -0.0131  0.0000 -0.4312 -0.4875  0.4655
</code></pre></div></div> <p>In the first output section, the core (<code class="language-plaintext highlighter-rouge">Cor</code>), valence (<code class="language-plaintext highlighter-rouge">Val</code>) and Rydberg (<code class="language-plaintext highlighter-rouge">Ryd</code>) NAOs of the natural minimum basis are summarized. In most cases, only the contributions from <code class="language-plaintext highlighter-rouge">Cor</code> and <code class="language-plaintext highlighter-rouge">Val</code> NAOs are significant, as the <code class="language-plaintext highlighter-rouge">Ryd</code> NAOs are typically negligible.</p> <p>From the first table, we can see that the NAO orbital number for the 2p<sub>x</sub> orbital of the oxygen atom is <em>5</em> for <code class="language-plaintext highlighter-rouge">Val</code> and <em>6</em> for <code class="language-plaintext highlighter-rouge">Ryd</code>. These numbers can then be found in the second table. Focusing on the HOMO (No. 5) in this example, the contribution from O(2p<sub>x</sub>, Val) is 0.9992<sup>2</sup> = 99.84%, while that from O(2p<sub>x</sub>, Ryd) is (–0.0210)<sup>2</sup> = 0.04%. Since a polarization function is included in the <code class="language-plaintext highlighter-rouge">6-31G(d)</code> basis set, the O(3d<sub>xz</sub>, Ryd) also contributes 0.13% to the HOMO. In total, the oxygen atom accounts for 100% of the HOMO contribution.</p> <ul> <li>References: http://sobereva.com/131 (in Chinese)</li> </ul>]]></content><author><name>Zhe Wang</name></author><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">List of All Posts</title><link href="https://wongzit.github.io/list-of-all-posts/" rel="alternate" type="text/html" title="List of All Posts"/><published>2025-05-12T07:35:16+00:00</published><updated>2025-05-12T07:35:16+00:00</updated><id>https://wongzit.github.io/list-of-all-posts</id><content type="html" xml:base="https://wongzit.github.io/list-of-all-posts/"><![CDATA[<p><strong>Jun. 03, 2025</strong> <a href="https://wongzit.github.io/orbital-composition-analysis/">Orbital Composition Analysis</a></p> <p><strong>Jan. 21, 2025</strong> <a href="https://wongzit.github.io/a-new-3d-nics-method-based-on-esp-mapping/">A New 3D NICS Method Based on ESP Mapping</a></p> <p><strong>Feb. 12, 2024</strong> <a href="https://wongzit.github.io/gaussian-calculation-task-continuation/">Gaussian 16 Calculation Task Continuation</a></p> <p><strong>Dec. 29, 2023</strong> <a href="https://wongzit.github.io/pyaroma-version-4-update/">py.Aroma Version 4 Update</a></p> <p><strong>Nov. 09, 2023</strong> <a href="https://wongzit.github.io/analyze-intermolecular-interactions-by-sapt/">Analyze Intermolecular Interactions by SAPT</a></p> <p><strong>Sep. 30, 2023</strong> <a href="https://wongzit.github.io/computing-charge-transfer-rate-based-on-marcus-theory-using-gaussian/">Computing Charge Transfer Rate Based on Marcus Theory Using Gaussian</a></p> <p><strong>Aug. 01, 2023</strong> <a href="https://wongzit.github.io/hartree-fock-exchange-of-dft-functionals/">Hartree-Fock Exchange of DFT Functionals</a></p> <p><strong>Apr. 28, 2023</strong> <a href="https://wongzit.github.io/natural-transition-orbitals-(nto)-analysis/">Natural Transition Orbitals (NTO) Analysis</a></p> <p><strong>Jun. 27, 2022</strong> <a href="https://wongzit.github.io/impact-factor-2022/">Impact Factor 2022</a></p> <p><strong>May 13, 2022</strong> <a href="https://wongzit.github.io/memo-install-gaussian-and-gaussview-on-linux-machine/">MEMO: Install Gaussian and GaussView on Linux Machine</a></p> <p><strong>Apr. 27, 2022</strong> <a href="https://wongzit.github.io/evaluating-dissected-nics-with-nbo-program/">Evaluating Dissected NICS with NBO Program</a></p> <p><strong>Apr. 06, 2022</strong> <a href="https://wongzit.github.io/install-dalton-on-linux-machine/">Install Dalton on Linux Machine</a></p> <p><strong>Feb. 17, 2022</strong> <a href="https://wongzit.github.io/calculation-of-solvation-free-energy/">Calculation of Solvation Free Energy</a></p> <p><strong>Spe. 12, 2021</strong> <a href="https://wongzit.github.io/gaumonitor-v3-update/">gauMonitor v3.0.0 Update</a></p> <p><strong>Sep. 03, 2021</strong> <a href="https://wongzit.github.io/nmr-prediction-with-scaling-factors/">NMR Prediction with Scaling Factors</a></p> <p><strong>Sep. 02, 2021</strong> <a href="https://wongzit.github.io/manual-for-calculating-nics-with-nbo-program/">Manual for Calculating NICS with NBO Program</a></p> <p><strong>Aug. 28, 2021</strong> <a href="https://wongzit.github.io/pyaroma-a-multifunction-aromaticity-analyzer/">pyAroma: A Multifunction Aromaticity Analyser</a></p> <p><strong>Aug. 25, 2021</strong> <a href="https://wongzit.github.io/install-gaussian-16-on-a-mac/">Install Gaussian 16 on a Mac</a></p> <p><strong>Jul. 02, 2021</strong> <a href="https://wongzit.github.io/install-orca-5-on-linux-machine/">Install ORCA 5 on Linux Machine</a></p> <p><strong>Jun. 25, 2021</strong> <a href="https://wongzit.github.io/memo-simulation-of-epr-spectrum-with-easyspin/">MEMO: Simulation of EPR Spectrum with EasySpin</a></p> <p><strong>Jun. 22, 2021</strong> <a href="https://wongzit.github.io/method-to-solve-the-scf-not-converged/">Methods to Solve the SCF not Converged</a></p> <p><strong>Jun. 13, 2021</strong> <a href="https://wongzit.github.io/prepare-supporting-information-with-csigen/">Prepare Supporting Information with CSIgen</a></p> <p><strong>Jun. 12, 2021</strong> <a href="https://wongzit.github.io/3d-icss-analyses-with-icssgen3d-and-icsscub3d/">3D-ICSS Analyses with ICSSgen3D and ICSScub3D</a></p> <p><strong>Jun. 06, 2021</strong> <a href="https://wongzit.github.io/gaussian-common-errors-and-solutions/">Gaussian Common Errors and Solutions</a></p> <p><strong>Jun. 05, 2021</strong> <a href="https://wongzit.github.io/visualization-of-aromaticity-gimic/">Visualization of Aromaticity: GIMIC</a></p> <p><strong>Jun. 05, 2021</strong> <a href="https://wongzit.github.io/visualization-of-aromaticity-aicd/">Visualization of Aromaticity: AICD</a></p> <p><strong>Jun. 03, 2021</strong> <a href="https://wongzit.github.io/enepro-a-python-program-for-drawing-energy-profile/">EnePro: A Python Program for Drawing Energy Profile</a></p> <p><strong>Jun. 03, 2021</strong> <a href="https://wongzit.github.io/nics-analyses-with-nicsgen/">NICS Analyses with NICSgen</a></p> <p><strong>Jun. 03, 2021</strong> <a href="https://wongzit.github.io/homa-calculation-with-homacalc/">HOMA Calculation with HOMAcalc</a></p> <p><strong>Jun. 02, 2021</strong> <a href="https://wongzit.github.io/diradical-character-calculation/">Diradical Character Calculation</a></p> <p><strong>May 30, 2021</strong> <a href="https://wongzit.github.io/2d-icss-analyses-with-icssgen-and-icsscsv/">2D-ICSS Analyses with ICSSgen and ICSScsv</a></p> <p><strong>May 27, 2021</strong> <a href="https://wongzit.github.io/epr-prediction-with-orca-program/">EPR Prediction with ORCA Program</a></p> <p><strong>Apr. 19, 2021</strong> <a href="https://wongzit.github.io/plot-odd-electron-density/">Plot Odd Electron Density</a></p>]]></content><author><name>Zhe Wang</name></author><summary type="html"><![CDATA[Jun. 03, 2025 Orbital Composition Analysis]]></summary></entry><entry><title type="html">A New 3D NICS Method Based on ESP Mapping</title><link href="https://wongzit.github.io/a-new-3d-nics-method-based-on-esp-mapping/" rel="alternate" type="text/html" title="A New 3D NICS Method Based on ESP Mapping"/><published>2025-01-21T06:53:36+00:00</published><updated>2025-01-21T06:53:36+00:00</updated><id>https://wongzit.github.io/a-new-3d-nics-method-based-on-esp-mapping</id><content type="html" xml:base="https://wongzit.github.io/a-new-3d-nics-method-based-on-esp-mapping/"><![CDATA[<h2 id="introduction">Introduction</h2> <p>Nucleus-Independent Chemical Shift (NICS) has become one of the most popular methods for assessing aromaticity, primarily due to its straightforward implementation. Despite its widespread use, evaluating the aromaticity of contorted molecules with NICS remains challenging. To address these difficulties, several three-dimensional approaches—such as <a href="DOI https://doi.org/10.1039/B204629F">3D-ICSS</a> and the <a href="https://doi.org/10.1039/d1sc03368a">3D IMS map</a>—have been proposed.</p> <p>In this blog, I introduce a new 3D NICS approach that maps NICS values onto an electrostatic potential surface, thereby offering a more comprehensive understanding of the relationship between aromaticity and electron density (currently I name it as <em>denNICS</em>). A brief guide on how to implement <em>denNICS</em> is provided below. The source code required to perform these calculations is available <a href="https://github.com/wongzit/minorScripts/blob/main/denNICS.py">here</a>.</p> <h2 id="method-overview">Method Overview</h2> <h4 id="1-compute-total-electron-density">1. Compute Total Electron Density</h4> <p>Use <strong>Gaussian</strong> to calculate the total electron density. Make sure to save the results in a <code class="language-plaintext highlighter-rouge">.fchk</code> file.</p> <h4 id="2-generate-a-cube-file">2. Generate a .cube File</h4> <p>From the <code class="language-plaintext highlighter-rouge">.fchk</code> file, create a <code class="language-plaintext highlighter-rouge">.cube</code> file for the total electron density using the <code class="language-plaintext highlighter-rouge">cubegen</code> module or <strong>GaussView</strong>.</p> <h4 id="3-run-the-script-first-pass">3. Run the Script (First Pass)</h4> <ul> <li>Execute the script and provide the path to the <code class="language-plaintext highlighter-rouge">.cube</code> file when prompted.</li> <li>Press <strong>Enter</strong>. The script will generate multiple <code class="language-plaintext highlighter-rouge">.gjf</code> files and a <code class="language-plaintext highlighter-rouge">.pm</code> file. <blockquote> <p><strong>Note:</strong> You can modify the computational method in the script at lines 77 and 79 to suit your needs.</p> </blockquote> </li> </ul> <h4 id="4-submit-the-gjf-files">4. Submit the .gjf Files</h4> <p>Run all generated <code class="language-plaintext highlighter-rouge">.gjf</code> files in <strong>Gaussian</strong>.</p> <h4 id="5-run-the-script-second-pass">5. Run the Script (Second Pass)</h4> <ul> <li>Once the <strong>Gaussian</strong> calculations are complete, rerun the script.</li> <li>Provide the path to any of the resulting <code class="language-plaintext highlighter-rouge">.log</code> files when prompted and press <strong>Enter</strong>.</li> <li>A new <code class="language-plaintext highlighter-rouge">.cube</code> file named <em>denNICS.cube</em> will be generated.</li> </ul> <h4 id="6-map-dennicscube">6. Map denNICS.cube</h4> <p>Finally, visualize <em>denNICS.cube</em> alongside the total electron density. This combined mapping allows for a clearer, more detailed picture of how aromaticity correlates with the underlying electron density distribution.</p> <p>Following is an example for a phenanthrene trimer (ref.: <a href="https://doi.org/10.1039/d1sc03368a">10.1039/d1sc03368a</a>).</p> <p align="center"> <img alt="reorganization" src="/assets/blog/dennics.png" style="height:366px;"/> </p> <p>This procedure offers a practical way to investigate the aromaticity of complex molecules by integrating NICS values onto an electrostatic potential surface. By following the steps outlined, researchers can gain deeper insight into the interplay between aromaticity and electron density in three-dimensional space.</p> <p>Currently, <em>denNICS</em> is still in development, and I plan to integrate it into the next version of <a href="https://wongzit.github.io/program/pyaroma/">py.Aroma</a>. In the meantime, if you encounter any issues with this method, please don’t hesitate to reach out.</p>]]></content><author><name>Zhe Wang</name></author><category term="Gaussian"/><category term="Computation"/><summary type="html"><![CDATA[Introduction]]></summary></entry><entry><title type="html">Gaussian 16 Calculation Task Continuation</title><link href="https://wongzit.github.io/gaussian-calculation-task-continuation/" rel="alternate" type="text/html" title="Gaussian 16 Calculation Task Continuation"/><published>2024-02-12T15:20:36+00:00</published><updated>2024-02-12T15:20:36+00:00</updated><id>https://wongzit.github.io/gaussian-calculation-task-continuation</id><content type="html" xml:base="https://wongzit.github.io/gaussian-calculation-task-continuation/"><![CDATA[<h3 id="1-geometry-optimization">1. Geometry Optimization</h3> <p><strong>Prerequisite:</strong> A checkpoint file (<em>.chk</em>) from a previous calculation is required.</p> <p><strong>Continuation Method:</strong> Add <code class="language-plaintext highlighter-rouge">opt=restart</code> to the route section.</p> <h5 id="example">Example</h5> <p><strong>Original input file:</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%chk=xxx.chk
#p opt=QST2 ...
</code></pre></div></div> <p><strong>Continuation input file:</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%chk=xxx.chk
#p opt=(QST2,restart) ...
</code></pre></div></div> <p><strong>Additional Notes:</strong></p> <ol> <li>If there are other options after the <code class="language-plaintext highlighter-rouge">opt</code> keyword in the original input file, you can simply add <code class="language-plaintext highlighter-rouge">restart</code>.</li> <li>If the original input file contains <code class="language-plaintext highlighter-rouge">CalcFC</code> or <code class="language-plaintext highlighter-rouge">RCFC</code> options, you can ignore them in the continuation input file and use the <code class="language-plaintext highlighter-rouge">restart</code> option directly.</li> <li>To resume geometry optimization from a specific step, use the <code class="language-plaintext highlighter-rouge">step=n</code> option in the <code class="language-plaintext highlighter-rouge">geom</code> keyword. For example: <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%oldchk=xxx.chk
%chk=new_xxx.chk
#p opt geom=(allcheck,step=6) guess=read
</code></pre></div> </div> </li> </ol> <h3 id="2-irc">2. IRC</h3> <p><strong>Prerequisites:</strong></p> <ul> <li>The calculation is not finished.</li> <li>Or the calculation is finished, but you want to continue the calculation with more steps.</li> </ul> <p><strong>Continuation Method:</strong> Use the <code class="language-plaintext highlighter-rouge">IRC=restart</code> command.</p> <h5 id="examples">Examples</h5> <p><strong>For unfinished calculation:</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%chk=xxx.chk
#p IRC=restart ...
</code></pre></div></div> <p><strong>Calculation finished, adding more steps:</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%chk=xxx.chk
#p IRC=(restart,maxpoint=20) ...
</code></pre></div></div> <h3 id="3-vibrational-analysis">3. Vibrational Analysis</h3> <p><strong>Prerequisites:</strong></p> <ul> <li>In addition to the <em>.chk</em> file, you also need the <em>.rwf</em> file.</li> <li>The <em>.rwf</em> file is located in the <strong>Scratch</strong> folder.</li> </ul> <p><strong>Continuation Method:</strong></p> <ol> <li>Add the <code class="language-plaintext highlighter-rouge">%rwf</code> section to the input file to specify the path to the <em>.rwf</em> file.</li> <li>Use the <code class="language-plaintext highlighter-rouge">restart</code> keyword.</li> </ol> <h5 id="example-1">Example</h5> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%chk=xxx.chk
%rwf=/path/filename.rwf
# restart
</code></pre></div></div> <p><strong>Obtaining the .rwf File Path:</strong></p> <p>The <em>.rwf</em> file name is written at the beginning of the <em>.log</em> or <em>.out</em> output file, for example:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Entering Gaussian System, Link 0=g16
Initial command:
/home/wangzhe/g16/l1.exe "/home/wangzhe/g16/Scratch/Gau-73779.inp" -scrdir="/home/wangzhe/g16/Scratch/"
Default is to use a total of  16 processors:
                              16 via shared-memory
                               1 via Linda
Entering Link 1 = /home/wangzhe/g16/l1.exe PID=     73781.
</code></pre></div></div> <p>In this example, the path to the <em>.rwf</em> file is:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>/home/wangzhe/g16/Scratch/Gau-73781.rwf
</code></pre></div></div>]]></content><author><name>Zhe Wang</name></author><category term="Gaussian"/><category term="Computation"/><summary type="html"><![CDATA[1. Geometry Optimization]]></summary></entry><entry><title type="html">py.Aroma Version 4 Update</title><link href="https://wongzit.github.io/pyaroma-version-4-update/" rel="alternate" type="text/html" title="py.Aroma Version 4 Update"/><published>2023-12-29T07:22:06+00:00</published><updated>2023-12-29T07:22:06+00:00</updated><id>https://wongzit.github.io/pyaroma-version-4-update</id><content type="html" xml:base="https://wongzit.github.io/pyaroma-version-4-update/"><![CDATA[<div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/pyAroma/hp_banner_v4-480.webp 480w,/assets/pyAroma/hp_banner_v4-800.webp 800w,/assets/pyAroma/hp_banner_v4-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/pyAroma/hp_banner_v4.png" class="img-fluid" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <p><strong>py.Aroma</strong> has been updated to version 4.0.0 with a bunch of new features. For more details, please refer to following links.</p> <ul> <li>Homepage of <strong>py.Aroma</strong>: <a href="https://wongzit.github.io/program/pyaroma/">🍶</a></li> <li>GitHub page of <strong>py.Aroma</strong>: <a href="https://github.com/wongzit/pyAroma">🍾</a></li> <li>User manual: <a href="https://wongzit.github.io/program/pyaroma/manual_v4.pdf">🍷</a></li> <li>Download: <a href="https://wongzit.github.io/program/pyaroma/download/">🍺</a></li> </ul>]]></content><author><name>Zhe Wang</name></author><category term="Software"/><category term="Computation"/><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Analyze Intermolecular Interactions by SAPT</title><link href="https://wongzit.github.io/analyze-intermolecular-interactions-by-sapt/" rel="alternate" type="text/html" title="Analyze Intermolecular Interactions by SAPT"/><published>2023-11-09T07:26:56+00:00</published><updated>2023-11-09T07:26:56+00:00</updated><id>https://wongzit.github.io/analyze-intermolecular-interactions-by-sapt</id><content type="html" xml:base="https://wongzit.github.io/analyze-intermolecular-interactions-by-sapt/"><![CDATA[<p>This is a quick note of how to analyze intermolecular interaction by Sysmetry-Adapted Perturbation Theory (SAPT) using <em>Psi4</em>.</p> <h1 id="1-preface">1. Preface</h1> <p>SAPT can divide intermolecular interaction into 4 components:</p> <ol> <li><strong>Electrostatics</strong>: describes the classical Coulomb interaction between fragments, with positive or negative values.</li> <li><strong>Exchange</strong>: describes the short-range exchange repulsion between fragments, with positive values (i.e. unfavorable for binding).</li> <li><strong>Dispersion</strong>: has a negative value and acts as an attractive force.</li> <li><strong>Induction</strong>: reflects the polarization and transfer of charges between fragments, with a negative value.</li> </ol> <p>The SAPT theory involves intramolecular and intermolecular perturbations, and as the order of perturbations increases, the results get better. In principle (as the order of perturbations considered increases step by step), the accuracy order is <code class="language-plaintext highlighter-rouge">SAPT0</code>, <code class="language-plaintext highlighter-rouge">SAPT2</code>, <code class="language-plaintext highlighter-rouge">SAPT2+</code>, <code class="language-plaintext highlighter-rouge">SAPT2+(3)</code>, <code class="language-plaintext highlighter-rouge">SAPT2+3</code>. <code class="language-plaintext highlighter-rouge">SAPT0</code> can still be used for medium to moderately large systems, while <code class="language-plaintext highlighter-rouge">SAPT2+(3)</code> can only be used for small systems.</p> <p>In order to improve the accuracy of SAPT interaction calculations, the <code class="language-plaintext highlighter-rouge">SAPT0</code> in the <em>Psi4</em> program also includes the <code class="language-plaintext highlighter-rouge">δHF</code> term, which reflects the high-order induction effect. For high-order SAPT such as <code class="language-plaintext highlighter-rouge">SAPT2+</code>, <code class="language-plaintext highlighter-rouge">SAPT2+(3)</code>, <code class="language-plaintext highlighter-rouge">SAPT2+3</code>, the <code class="language-plaintext highlighter-rouge">δMP2</code> term can also be added to consider the high-order coupling between induction and dispersion, such as <code class="language-plaintext highlighter-rouge">SAPT2+(3)</code> combined with <code class="language-plaintext highlighter-rouge">δMP2</code> called <code class="language-plaintext highlighter-rouge">SAPT2+(3)δMP2</code>. However, the physical meaning of the <code class="language-plaintext highlighter-rouge">δ</code> term is not very clear and cannot be further divided. The numerical value of the δ term is usually small, and it is generally classified as an induction term.</p> <h1 id="2-input">2. Input</h1> <p>An example is shown following:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>memory 20 gb

molecule　dimer {
0 1
S       1.318033    5.842267    2.881214
N      -1.355505    5.579081    0.154536
H      -1.976421    5.935383   -0.153845
C      -0.705457    6.014672    1.291775
C      -0.905384    7.050266    2.235758
H      -1.629222    7.634376    2.237331
C      -0.563794    4.592784   -0.398267
C       0.472970    5.283299    1.488835
C       0.120527    7.070918    3.149491
H       0.169447    7.685226    3.846026
S      -1.318033    3.137133   -2.881214
N       1.355505    3.400319   -0.154536
H       1.976421    3.044017    0.153845
C       0.705457    2.964728   -1.291775
C       0.905384    1.929134   -2.235758
H       1.629222    1.345024   -2.237331
C       0.563794    4.386616    0.398267
C      -0.472970    3.696101   -1.488835
C      -0.120527    1.908482   -3.149491
H      -0.169447    1.294174   -3.846026
     --
     0 1
S       4.174133   -1.352567   -2.881214
N       1.500595   -1.089381   -0.154536
H       0.879679   -1.445683    0.153845
C       2.150643   -1.524972   -1.291775
C       1.950716   -2.560566   -2.235758
H       1.226878   -3.144676   -2.237331
C       2.292306   -0.103084    0.398267
C       3.329070   -0.793599   -1.488835
C       2.976627   -2.581218   -3.149491
H       3.025547   -3.195526   -3.846026
S       1.538067    1.352567    2.881214
N       4.211605    1.089381    0.154536
H       4.832521    1.445683   -0.153845
C       3.561557    1.524972    1.291775
C       3.761484    2.560566    2.235758
H       4.485322    3.144676    2.237331
C       3.419894    0.103084   -0.398267
C       2.383130    0.793599    1.488835
C       2.735573    2.581218    3.149491
H       2.686653    3.195526    3.846026
     units angstrom

}
set {
    basis jun-cc-pVDZ
    scf_type DF
    freeze_core True
}

energy('sapt0')
</code></pre></div></div> <ul> <li><code class="language-plaintext highlighter-rouge">freeze_core True</code> can save computational cost.</li> <li><code class="language-plaintext highlighter-rouge">scf_type DF</code> can utilize density fitting to accelerate the SCF process.</li> </ul> <p>Run command <code class="language-plaintext highlighter-rouge">psi4 xxx.inp xxx.out -n 8</code> to start the calculation using 8 cores.</p> <h1 id="3-output">3. Output</h1> <p>The SAPT results would be summarized as following.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>  Special recipe for scaled SAPT0 (see Manual):
    Electrostatics sSAPT0         -24.34792103 [mEh]     -15.27855111 [kcal/mol]     -63.92545785 [kJ/mol]
    Exchange sSAPT0                15.70145759 [mEh]       9.85281339 [kcal/mol]      41.22417122 [kJ/mol]
    Induction sSAPT0               -5.93603581 [mEh]      -3.72491871 [kcal/mol]     -15.58505986 [kJ/mol]
    Dispersion sSAPT0              -4.77805738 [mEh]      -2.99827627 [kcal/mol]     -12.54478793 [kJ/mol]
  Total sSAPT0                    -19.36055663 [mEh]     -12.14893270 [kcal/mol]     -50.83113444 [kJ/mol]
</code></pre></div></div>]]></content><author><name>Zhe Wang</name></author><category term="Psi4"/><category term="Computation"/><summary type="html"><![CDATA[This is a quick note of how to analyze intermolecular interaction by Sysmetry-Adapted Perturbation Theory (SAPT) using Psi4.]]></summary></entry><entry><title type="html">Computing Charge Transfer Rate Based on Marcus Theory Using Gaussian</title><link href="https://wongzit.github.io/computing-charge-transfer-rate-based-on-marcus-theory-using-gaussian/" rel="alternate" type="text/html" title="Computing Charge Transfer Rate Based on Marcus Theory Using Gaussian"/><published>2023-09-30T08:11:16+00:00</published><updated>2023-09-30T08:11:16+00:00</updated><id>https://wongzit.github.io/computing-charge-transfer-rate-based-on-marcus-theory-using-gaussian</id><content type="html" xml:base="https://wongzit.github.io/computing-charge-transfer-rate-based-on-marcus-theory-using-gaussian/"><![CDATA[<script type="text/javascript" async="" src="https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.7/MathJax.js?config=TeX-MML-AM_CHTML"> </script> <script type="text/x-mathjax-config">
 MathJax.Hub.Config({
 tex2jax: {
 inlineMath: [['$', '$'] ],
 displayMath: [ ['$$','$$'], ["\\[","\\]"] ]
 }
 });
</script> <h2 id="1-preface">1 Preface</h2> <p>This blog is introducing the method for computing charge transfer integral and charge transfer rate constant via <em>Gaussian 16</em>. Here, an open-source program <a href="https://joshuasbrown.github.io/docs/CATNIP/catnip_home.html"><strong>CATNIP</strong></a> would be used, this program could be downloaded freely from the <a href="https://github.com/JoshuaSBrown/QC_Tools/releases">GitHub page</a>.</p> <h2 id="2-gaussian-inputs--outputs">2 Gaussian Inputs &amp; Outputs</h2> <p>To calculate charge transfer integral between two molecules, three separate calculateions are needed:</p> <ul> <li>Monomer 1</li> <li>Monomer 2</li> <li>Dimer</li> </ul> <p>Following keywords should be also included to tell the <em>Gaussian</em> to output the minimized atomic orbital coefficients those are needed for calculating charge transfer integral:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>nosymm pop=full iop(3/33=1) punch=mo
</code></pre></div></div> <p>You will get a <em>.log</em> file and a <em>Fort.7</em> file after each calculation. To calculate transfer integral using CATNIP, you need to rename the <em>Fort.7</em> file to the same name as your <em>.log</em> file with a <em>.pun</em> extension.</p> <h2 id="3-charge-transfer-integral">3 Charge Transfer Integral</h2> <blockquote> <p>This is just a simple note, for more detail information of how to use CATNIP, please refer to its homepage.</p> </blockquote> <p>To run a calculation, three <em>.log</em> files and three <em>.pun</em> files are needed, for monomer 1, monomer 2 and dimer, for example:</p> <ul> <li>1mer_1.log</li> <li>1mer_1.pun</li> <li>1mer_2.log</li> <li>1mer_2.pun</li> <li>2mer.log</li> <li>2mer.pun</li> </ul> <p>To calculate the charge transfer integral for the HOMO between the monomers, run following command (Note that the <em>.log</em> files and <em>.pun</em> files should be located in the same folder):</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>calc_J -p_1 1mer_1.pun -p_2 1mer_2.pun -p_P 2mer.pun
</code></pre></div></div> <p>To calculate the charge transfer integral for the LUMO, the orbital types must be specified:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>calc_J -p_1 1mer_1.pun -orb_ty_1 LUMO -p_2 1mer_2.pun -orb_ty_2 LUMO -p_P 2mer.pun
</code></pre></div></div> <p>The effective (or generalized) charge transfer integral <em>J_eff</em> (also known as electronic coupling <strong><em>V</em></strong>) would be shown on the screen:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>J_eff -0.00190564 eV
</code></pre></div></div> <h2 id="4-charge-transfer-rate-constant-based-on-marcus-theory">4 Charge Transfer Rate Constant Based on Marcus Theory</h2> <p>By Marcus theory, the rate constant of charge transfer <em>k_et</em> could be computed from electronic coupling <strong><em>V</em></strong> (<em>J_eff</em>) and reorganization energy λ:</p> \[k_{\rm et} = \sqrt { \frac {\pi}{\lambda k_{\rm B}T}} \frac{V^2}{\hbar} \exp {\left( - \frac {\lambda}{4k_{\rm B}T} \right)}\] <p>where, reduced Planck constant ħ, Boltzmann constant <em>k_B</em>, temperature T are also needed.</p> <p>The reorganization energy λ is defined as the energy difference between the charged and neutral systems at the two different geometries (adiabatic potential energy surface). To compute it, four separated calculations are needed, <em>e.g.</em> for eletron transfer:</p> <ul> <li>Geometry optimizaiton of neutral state (E_1)</li> <li>Single point calculation of anion state with neutral geometry (E_4)</li> <li>Geometry optimizaiton of anion state (E_3)</li> <li>Single point calculation of neutral state with anion geometry (E_2)</li> </ul> <p>and the reorganization energy is:</p> \[\lambda = \lambda_1 + \lambda_2\] \[\lambda_1 = E_2 - E_1\] \[\lambda_2 = E_4 - E_3\] <p align="center"> <img alt="reorganization" src="/assets/blog/re_en.png" style="height:366px;"/> </p> <p>Here I provided an Excel tool for computing the λ and <em>k_et</em> based on Marcus theory, download from <a href="https://wongzit.github.io/assets/blog/marcus_theory_zwang_20230929.xlsx">here</a>.</p> <h2 id="5-example">5 Example</h2> <p>Here is an example for a naphthalene dimer, the Cartesian coordinates were obtained from <a href="https://www.scm.com/doc/Tutorials/ElectronicTransport/ElectronAndHoleMobilities.html">ADF official tutorials page</a>. All files could be downloaded from <a href="https://github.com/wongzit/blogFiles/tree/main/blog_charge_transfer">here</a>.</p> <p>Monomer 1:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%nprocshared=8
%mem=10GB
# pw91pw91/tzvp nosymm pop=full iop(3/33=1) punch=mo

naphthalene monomer 1

0 1
 C                 -2.96292735   -1.37776232    2.34412329
 H                 -3.91358911   -3.24557560    2.36511160
 C                 -2.19933829   -0.51291048    1.59118541
 C                 -1.08607265   -1.59873768   -2.34412329
 C                 -2.23157919   -2.11438654   -0.26513808
 C                 -1.81742081   -0.86211346    0.26513808
 H                 -2.14645018   -3.30748680   -1.93535091
 H                 -0.80423336   -1.83888170   -3.25104686
 H                 -0.76084457    0.83758710   -0.16847761
 C                 -3.01509821   -2.98739399    0.54127003
 H                 -3.28815543   -3.81408710    0.16847761
 H                 -3.24476664   -1.13761830    3.25104686
 C                 -1.03390179    0.01089399   -0.54127003
 H                 -1.90254982    0.33098680    1.93535091
 C                 -3.37590246   -2.62057013    1.81755935
 C                 -0.67309754   -0.35592987   -1.81755935
 H                 -0.13541089    0.26907560   -2.36511160
 C                 -1.84966171   -2.46358952   -1.59118541
</code></pre></div></div> <p>Monomer 2:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%nprocshared=8
%mem=10GB
# pw91pw91/tzvp nosymm pop=full iop(3/33=1) punch=mo

naphthalene momomer 2

0 1
 C                  2.96292735    1.59873768   -2.34412329
 C                  1.08607265    1.37776232    2.34412329
 C                  1.84966171    0.51291048    1.59118541
 H                  1.90254982    3.30748680   -1.93535091
 C                  2.19933829    2.46358952   -1.59118541
 C                  2.23157919    0.86211346    0.26513808
 C                  1.03390179    2.98739399    0.54127003
 C                  1.81742081    2.11438654   -0.26513808
 C                  0.67309754    2.62057013    1.81755935
 H                  3.28815543   -0.83758710   -0.16847761
 H                  0.80423336    1.13761830    3.25104686
 C                  3.01509821   -0.01089399   -0.54127003
 H                  2.14645018   -0.33098680    1.93535091
 H                  3.91358911   -0.26907560   -2.36511160
 H                  0.76084457    3.81408710    0.16847761
 C                  3.37590246    0.35592987   -1.81755935
 H                  3.24476664    1.83888170   -3.25104686
 H                  0.13541089    3.24557560    2.36511160
</code></pre></div></div> <p>Dimer:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%nproc=8
%mem=10GB
# pw91pw91/tzvp nosymm pop=full iop(3/33=1) punch=mo

naphthalene dimer

0 1
 C                 -2.96292735   -1.37776232    2.34412329
 H                 -3.91358911   -3.24557560    2.36511160
 C                 -2.19933829   -0.51291048    1.59118541
 C                 -1.08607265   -1.59873768   -2.34412329
 C                 -2.23157919   -2.11438654   -0.26513808
 C                 -1.81742081   -0.86211346    0.26513808
 H                 -2.14645018   -3.30748680   -1.93535091
 H                 -0.80423336   -1.83888170   -3.25104686
 H                 -0.76084457    0.83758710   -0.16847761
 C                 -3.01509821   -2.98739399    0.54127003
 H                 -3.28815543   -3.81408710    0.16847761
 H                 -3.24476664   -1.13761830    3.25104686
 C                 -1.03390179    0.01089399   -0.54127003
 H                 -1.90254982    0.33098680    1.93535091
 C                 -3.37590246   -2.62057013    1.81755935
 C                 -0.67309754   -0.35592987   -1.81755935
 H                 -0.13541089    0.26907560   -2.36511160
 C                 -1.84966171   -2.46358952   -1.59118541
 C                  2.96292735    1.59873768   -2.34412329
 C                  1.08607265    1.37776232    2.34412329
 C                  1.84966171    0.51291048    1.59118541
 H                  1.90254982    3.30748680   -1.93535091
 C                  2.19933829    2.46358952   -1.59118541
 C                  2.23157919    0.86211346    0.26513808
 C                  1.03390179    2.98739399    0.54127003
 C                  1.81742081    2.11438654   -0.26513808
 C                  0.67309754    2.62057013    1.81755935
 H                  3.28815543   -0.83758710   -0.16847761
 H                  0.80423336    1.13761830    3.25104686
 C                  3.01509821   -0.01089399   -0.54127003
 H                  2.14645018   -0.33098680    1.93535091
 H                  3.91358911   -0.26907560   -2.36511160
 H                  0.76084457    3.81408710    0.16847761
 C                  3.37590246    0.35592987   -1.81755935
 H                  3.24476664    1.83888170   -3.25104686
 H                  0.13541089    3.24557560    2.36511160
</code></pre></div></div> <p>The command used for CATNIP:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>calc_J -p_1 naph_mol1.pun -orb_ty_1 LUMO -p_2 naph_mol2.pun -orb_ty_2 LUMO -p_P naph_p.pun
</code></pre></div></div> <p>and here is the output:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>Running calc_J VERSION 1.9
log file for first monomer is:      naph_mol1.log
log file for second monomer is:     naph_mol2.log
log file for dimer is:              naph_p.log
pun file for the first monomer is:  naph_mol1.pun
pun file for the second monomer is: naph_mol2.pun
pun file for the dimer is:          naph_p.pun

Dimer     Spin Alpha
Monomer 1 Spin Alpha Orbital LUMO
Monomer 2 Spin Alpha Orbital LUMO
J_ab  -0.0558655 eV
e_a   -1.88656 eV
e_b   -2.14962 eV
S_ab  0.00943935
J_eff -0.0368193 eV
</code></pre></div></div> <p>For comparsion, the J_eff calculated at same level of theory by ADF was -0.03780 eV.</p> <p>FYI:</p> \[V = J_{\rm eff} = \frac{J_{\rm ab} - \frac{S_{\rm ab}(e_{\rm a} + e_{\rm b})}{2}}{1-S_{\rm ab}^2}\] \[\hbar = 1.054571817 \times 10 ^ {-34} \, \rm {J \cdot s} = 6.582119569 \times 10 ^{-16} \, \rm {eV \cdot s}\] \[k_{\rm B} = 1.380649 \times 10 ^ {-23} \, \rm {J \cdot K^{-1}} = 8.617333262 \times 10 ^{-5} \, \rm {eV \cdot K^{-1}}\] \[1 \, {\rm eV} = 1.60218 \times 10 ^ {-19} \, {\rm J}\] \[1 \, {\rm J} = 6.24151 \times 10 ^ {18} \, {\rm eV}\] <p>The reorganization energy λ was computed to 0.23 eV, thus, the <em>k_et</em> for electrons is 4.85E+12 / s at 300 K.</p>]]></content><author><name>Zhe Wang</name></author><category term="Gaussian"/><category term="Computation"/><summary type="html"><![CDATA[]]></summary></entry><entry><title type="html">Hartree-Fock Exchange of DFT Functionals</title><link href="https://wongzit.github.io/hartree-fock-exchange-of-dft-functionals/" rel="alternate" type="text/html" title="Hartree-Fock Exchange of DFT Functionals"/><published>2023-08-01T07:46:56+00:00</published><updated>2023-08-01T07:46:56+00:00</updated><id>https://wongzit.github.io/hartree-fock-exchange-of-dft-functionals</id><content type="html" xml:base="https://wongzit.github.io/hartree-fock-exchange-of-dft-functionals/"><![CDATA[<h1 id="global-hybrid-functionals">Global Hybrid Functionals</h1> <table> <thead> <tr> <th style="text-align: left">Functional</th> <th style="text-align: center">HF Exchange / %</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">GGA<br/><em>meta</em>-GGA</td> <td style="text-align: center">0</td> </tr> <tr> <td style="text-align: left">TPSSh<br/>r2SCANh</td> <td style="text-align: center">10</td> </tr> <tr> <td style="text-align: left">O3LYP</td> <td style="text-align: center">11.61</td> </tr> <tr> <td style="text-align: left">TPSS1KCIS</td> <td style="text-align: center">13</td> </tr> <tr> <td style="text-align: left">MPW1KCIS</td> <td style="text-align: center">15</td> </tr> <tr> <td style="text-align: left">(<em>hybrid</em>) B97</td> <td style="text-align: center">19.43</td> </tr> <tr> <td style="text-align: left">B3LYP<br/>B3P86<br/>B3PW91</td> <td style="text-align: center">20</td> </tr> <tr> <td style="text-align: left">B97-1<br/>B97-2<br/>HCTH93</td> <td style="text-align: center">21</td> </tr> <tr> <td style="text-align: left">MPW3LYP<br/>X3LYP</td> <td style="text-align: center">21.8</td> </tr> <tr> <td style="text-align: left">PBE1KCIS</td> <td style="text-align: center">22</td> </tr> <tr> <td style="text-align: left">APFD</td> <td style="text-align: center">23</td> </tr> <tr> <td style="text-align: left">PBE0<br/>TPSS0<br/>SCAN0<br/>r2SCAN0<br/>B1B95<br/>mPW1PW91</td> <td style="text-align: center">25</td> </tr> <tr> <td style="text-align: left">M06</td> <td style="text-align: center">27</td> </tr> <tr> <td style="text-align: left">PW6B95<br/>M05</td> <td style="text-align: center">28</td> </tr> <tr> <td style="text-align: left">MPW1B95</td> <td style="text-align: center">31</td> </tr> <tr> <td style="text-align: left">PBE0-1/3</td> <td style="text-align: center">33.33</td> </tr> <tr> <td style="text-align: left">PBE38</td> <td style="text-align: center">37.5</td> </tr> <tr> <td style="text-align: left">BB1K<br/>BMK</td> <td style="text-align: center">42</td> </tr> <tr> <td style="text-align: left">MPW1K</td> <td style="text-align: center">42.8</td> </tr> <tr> <td style="text-align: left">MPWB1K</td> <td style="text-align: center">44</td> </tr> <tr> <td style="text-align: left">MN15</td> <td style="text-align: center">44</td> </tr> <tr> <td style="text-align: left">PWB6K</td> <td style="text-align: center">46</td> </tr> <tr> <td style="text-align: left">BHandHLYP<br/>PBE50<br/>r2SCAN50</td> <td style="text-align: center">50</td> </tr> <tr> <td style="text-align: left">M08-HX</td> <td style="text-align: center">52.23</td> </tr> <tr> <td style="text-align: left">M06-2X</td> <td style="text-align: center">54</td> </tr> <tr> <td style="text-align: left">M05-2X</td> <td style="text-align: center">56</td> </tr> <tr> <td style="text-align: left">M08-SO</td> <td style="text-align: center">56.79</td> </tr> <tr> <td style="text-align: left">M06-HF</td> <td style="text-align: center">100</td> </tr> </tbody> </table> <h1 id="range-separated-functionals">Range Separated Functionals</h1> <table> <thead> <tr> <th style="text-align: left">Functional</th> <th style="text-align: center">Short Range / %</th> <th style="text-align: center">Long Range / %</th> <th style="text-align: center">ω</th> </tr> </thead> <tbody> <tr> <td style="text-align: left">LC-ωPBE</td> <td style="text-align: center">0</td> <td style="text-align: center">100</td> <td style="text-align: center">0.4</td> </tr> <tr> <td style="text-align: left">LC-PBE0</td> <td style="text-align: center">25</td> <td style="text-align: center">100</td> <td style="text-align: center">0.3</td> </tr> <tr> <td style="text-align: left">ωB97</td> <td style="text-align: center">0</td> <td style="text-align: center">100</td> <td style="text-align: center">0.4</td> </tr> <tr> <td style="text-align: left">ωB97X</td> <td style="text-align: center">15.77</td> <td style="text-align: center">100</td> <td style="text-align: center">0.3</td> </tr> <tr> <td style="text-align: left">ωB97XD</td> <td style="text-align: center">22.2</td> <td style="text-align: center">100</td> <td style="text-align: center">0.2</td> </tr> <tr> <td style="text-align: left">ωB97X-D3(0)</td> <td style="text-align: center">19.57</td> <td style="text-align: center">100</td> <td style="text-align: center">0.25</td> </tr> <tr> <td style="text-align: left">ωB97X-V</td> <td style="text-align: center">16.7</td> <td style="text-align: center">100</td> <td style="text-align: center">0.3</td> </tr> <tr> <td style="text-align: left">ωB97M-V</td> <td style="text-align: center">15</td> <td style="text-align: center">100</td> <td style="text-align: center">0.3</td> </tr> <tr> <td style="text-align: left">CAM-B3LYP</td> <td style="text-align: center">19</td> <td style="text-align: center">65</td> <td style="text-align: center">0.33</td> </tr> <tr> <td style="text-align: left">M11</td> <td style="text-align: center">42.8</td> <td style="text-align: center">100</td> <td style="text-align: center">0.25</td> </tr> <tr> <td style="text-align: left">HSE03<br/>HSE06<br/>MN12-SX<br/>N12-SX</td> <td style="text-align: center">25</td> <td style="text-align: center">0</td> <td style="text-align: center"> </td> </tr> </tbody> </table>]]></content><author><name>Zhe Wang</name></author><category term="Computation"/><summary type="html"><![CDATA[Global Hybrid Functionals]]></summary></entry><entry><title type="html">Natural Transition Orbitals (NTO) Analysis</title><link href="https://wongzit.github.io/natural-transition-orbitals-(nto)-analysis/" rel="alternate" type="text/html" title="Natural Transition Orbitals (NTO) Analysis"/><published>2023-04-28T07:26:56+00:00</published><updated>2023-04-28T07:26:56+00:00</updated><id>https://wongzit.github.io/natural-transition-orbitals-(nto)-analysis</id><content type="html" xml:base="https://wongzit.github.io/natural-transition-orbitals-(nto)-analysis/"><![CDATA[<h1 id="1-preface">1. Preface</h1> <p>When computing excited sates using CIS, TDHF, TDDFT methods, the transition modes can be expressed as a linear combination of different ways of transition between the occupied orbitals in the ground state and the virtual orbitals. In many cases, only one type of transition has a larger contribution. For example, following is a <em>Gaussian</em> output of acrolein @<code class="language-plaintext highlighter-rouge">RIS/6-31+G*</code>.</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> Excited State   2:      Singlet-A'     7.0919 eV  174.83 nm  f=0.7713  &lt;S**2&gt;=0.000
      15 -&gt; 16         0.66677
      15 -&gt; 25        -0.13319
</code></pre></div></div> <p>The MO15 -&gt; MO16 transition contributed 88.9% (= 2 x 0.66677^2 x 100%) for excited state S0 -&gt; S2. Therefore, the S0 -&gt; S2 transition can be elucidated by analyzing this dominant orbital transition pattern.</p> <p>On the other hand, for the excited state S0 -&gt; S1 of same molecule:</p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code> Excited State   1:      Singlet-A"     4.6966 eV  263.99 nm  f=0.0003  &lt;S**2&gt;=0.000
      14 -&gt; 16         0.56407
      14 -&gt; 20        -0.21920
      14 -&gt; 25        -0.24192
      14 -&gt; 29        -0.17712
      14 -&gt; 33        -0.13568
</code></pre></div></div> <p>Although MO14 -&gt; MO16 contributed 63.6% of S0 -&gt; S1 transition, this is not sufficient. However, if other orbital transitions with small coefficients are also considered, the analysis will be difficult to identify. Natural Transition Orbitals (NTO) can solve this problem by transforming the molecular orbitals. This allows describing the complex transition with just one transition from an occupied orbital to a virtual orbital, making the analysis much easier.</p> <h1 id="2-nto-analysis">2. NTO Analysis</h1> <h3 id="21-one-step-method">2.1 One-Step Method</h3> <p>As example, the route section of input file for NTO analysis (S0 -&gt; S1) is like:</p> <p><strong>TDDFT</strong>: <code class="language-plaintext highlighter-rouge">#p td b3lyp/6-31g(d) pop=(saveNTO,NTO) density=transition=1</code> <strong>CIS</strong>: <code class="language-plaintext highlighter-rouge">#p cis/6-31g(d) pop=(saveNTO,NTO) density=transition=1</code></p> <p>For further analysis of S0 -&gt; S2 transition, here are 2 options:</p> <ol> <li><code class="language-plaintext highlighter-rouge">#p cis/6-31g(d) pop=(saveNTO,NTO) density=transition=2</code></li> <li><code class="language-plaintext highlighter-rouge">#p cis(read)/6-31+G* guess=read pop=(saveNTO,NTO) density=transition=2</code>, this method should be faster.</li> </ol> <h3 id="22-multi-step-method">2.2 Multi-Step Method</h3> <p>This method requires an excited state calculation at first.</p> <p><strong>i) Excited State Calculation</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%chk=es.chk
#p td=(nstate=10) b3lyp/6-31g*

[Molecule Specification]
</code></pre></div></div> <p><strong>ii) NTO Calculation</strong></p> <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>%oldchk=es.chk
%chk=state_N.chk
#p b3lyp/6-31g* geom=allcheck guess=(read,only) density=(check,transition=N) pop=(saveNTO,NTO)
</code></pre></div></div> <p>For method <strong>2.1</strong> and <strong>2.2</strong>, convert the .chk file to .fchk file, and open it by <em>GaussView</em> to plot the MO. In this example, the transition 15 -&gt; 16 contributed 99.3% to S0 -&gt; S1.</p> <div class="col-sm mt-3 mt-md-0"> <figure> <picture> <source class="responsive-img-srcset" srcset="/assets/blog/nto-480.webp 480w,/assets/blog/nto-800.webp 800w,/assets/blog/nto-1400.webp 1400w," type="image/webp" sizes="95vw"/> <img src="/assets/blog/nto.png" class="img-fluid" width="100%" height="auto" data-zoomable="" loading="eager" onerror="this.onerror=null; $('.responsive-img-srcset').remove();"/> </picture> </figure> </div> <h3 id="23-via-multiwfn">2.3 via Multiwfn</h3> <p><a href="http://sobereva.com/multiwfn/">Multiwfn</a> also provides a function for NTO analysis. For more detail, please refer to the Section 4.18.6 in user manual.</p>]]></content><author><name>Zhe Wang</name></author><category term="Gaussian"/><category term="Computation"/><summary type="html"><![CDATA[1. Preface]]></summary></entry><entry><title type="html">Impact Factor 2022</title><link href="https://wongzit.github.io/impact-factor-2022/" rel="alternate" type="text/html" title="Impact Factor 2022"/><published>2022-06-27T15:33:56+00:00</published><updated>2022-06-27T15:33:56+00:00</updated><id>https://wongzit.github.io/impact-factor-2022</id><content type="html" xml:base="https://wongzit.github.io/impact-factor-2022/"><![CDATA[<p>Impact factor 2022, download from <a href="/assets/blog/jcr_2022.xlsx">here</a>.</p>]]></content><author><name>Zhe Wang</name></author><category term="Journal"/><summary type="html"><![CDATA[Impact factor 2022, download from here.]]></summary></entry></feed>